name: Auto Docker-Deploy After Push

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout code
      - name: Checkout Code
        uses: actions/checkout@v2

      # 2. Set up Python environment
      - name: Set Up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      # 3. Install dependencies
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # 4. Run Tests
      - name: Run Tests
        run: |
          python -m unittest discover

      # 5. Authenticate with Google Cloud
      - name: Authenticate with GCP
        env:
          GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}
        run: |
          echo "$GCP_SA_KEY" > /tmp/gcp-key.json
          gcloud auth activate-service-account --key-file=/tmp/gcp-key.json
          gcloud config set project devops-451510

      # 6. Add Google Cloud GPG key to avoid "NO_PUBKEY" issue
      - name: Add GCP GPG Key
        run: |
          curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo tee /etc/apt/trusted.gpg.d/google.asc

      # 7. Install the necessary components (fix for package not found issue)
      - name: Install GKE Auth Plugin
        run: |
          echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
          curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key --keyring /usr/share/keyrings/cloud.google.gpg add -
          sudo apt update
          sudo apt-get install -y google-cloud-sdk-gke-gcloud-auth-plugin kubectl
          export USE_GKE_GCLOUD_AUTH_PLUGIN=True

      # 8. Set up Kubernetes authentication
      - name: Get GKE Cluster Credentials
        run: |
          gcloud container clusters get-credentials flask-cluster \
            --zone us-central1-a --project devops-451510
          kubectl config current-context
          kubectl config view

      # 9. Build and push Docker image to Google Artifact Registry
      - name: Build and Push Docker Image
        run: |
          gcloud auth configure-docker us-central1-docker.pkg.dev --quiet
          IMAGE_NAME="us-central1-docker.pkg.dev/devops-451510/my-docker-repo/project-flask-app:latest"
          docker build -t $IMAGE_NAME .
          docker push $IMAGE_NAME

      # 10. Deploy to Kubernetes and restart pods
      - name: Deploy to Kubernetes
        run: |
          IMAGE_NAME="us-central1-docker.pkg.dev/devops-451510/my-docker-repo/project-flask-app:latest"
          kubectl set image deployment/flask-app-deployment flask-app=$IMAGE_NAME
          kubectl rollout restart deployment flask-app-deployment
          kubectl get pods -o wide
