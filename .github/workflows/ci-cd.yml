name: auto docker-deploy after push

on:
  push:
    branches:
     - main
  pull_request:
    branches:
    - main
  

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # 1. reading the code
      - name: Checkout code
        uses: actions/checkout@v2

      # 2. python setup
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      # 3. installing dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # 4. tests (Optional if you have tests)
      - name: Run tests
        run: |
          # This is an example. Add your test command here if you have any.
          python -m unittest discover

      # 5. building docker image --> registry
      - name: Build and push Docker image
        run: |
          docker build -t yourusername/yourapp:latest .
          docker push yourusername/yourapp:latest

      # 6. deploy --> GCP (SSH into VM and restart app)
      - name: Deploy to GCP
        env:
          SSH_PRIVATE_KEY: ${{ secrets.GCP_SSH_PRIVATE_KEY }}
          GCP_VM_IP: ${{ secrets.GCP_VM_IP }}
        run: |
          # defining PRIVATE_KEY to a file
          echo "$SSH_PRIVATE_KEY" > private_key.pem
          chmod 600 private_key.pem

          # SSH --> VM and deploying the app
          ssh -i private_key.pem -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null username@$GCP_VM_IP <<EOF
            cd /home/username/project
            git pull origin main
            docker-compose down
            docker-compose up -d
          EOF